#include <iostream>
using namespace std;

int main()
{
    int Dec = 0;
    char ch;
    cout << "Binary = ";

    // 读取用户输入的二进制数，直到遇到 '0' 或 '1' 为止
    // 去掉前面的非二进制
    do
    {
        cin.get(ch);
    } while (ch != '0' && ch != '1');

    // 转换二进制数为十进制数
    // do-while 循环，至少执行一次
    // do
    // {
    //     // 将字符 '0' 或 '1' 转换为对应的整数 0 或 1，并累加到 Dec 中
    //     Dec += ch - '0';
    //     // 继续读取下一个字符
    //     cin.get(ch);
    //     // 如果读取到的字符是 '0' 或 '1'，则将 Dec 乘以 2
    //     // 如果是最后一位时，不乘以 2
    //     if (ch == '0' || ch == '1')
    //     {
    //         Dec *= 2;
    //     }
    // } while (ch == '0' || ch == '1');
    // while循环也可以实现，但需要先判断是否读取到了有效的字符，即前面的判断循环
    while (ch == '0' || ch == '1')
    {
        Dec += ch - '0';
        cin.get(ch);
        if (ch == '0' || ch == '1')
        {
            Dec *= 2;
        }
    }

    // 输出转换后的十进制数
    cout << "Decimal = " << Dec << endl;
}

// 假设用户输入的二进制数是 101101：
// 1. 初始化：Dec 初始值为 0。
// 2. 输入第一位：读到第一个有效字符 ‘1’，Dec = 0 + (1 - '0') = 0 + 1 = 1。
// 3. 乘以2：准备处理下一位时，乘以2，Dec = 1 * 2 = 2。
// 4. 输入第二位：读到下一个字符 ‘0’，Dec = 2 + (0 - '0') = 2 + 0 = 2。
// 5. 乘以2：Dec = 2 * 2 = 4。
// 6. 输入第三位：读到下一个字符 ‘1’，Dec = 4 + (1 - '0') = 4 + 1 = 5。
// 7. 乘以2：Dec = 5 * 2 = 10。
// 8. 输入第四位：读到下一个字符 ‘1’，Dec = 10 + (1 - '0') = 10 + 1 = 11。
// 9. 乘以2：Dec = 11 * 2 = 22。
// 10. 输入第五位：读到下一个字符 ‘0’，Dec = 22 + (0 - '0') = 22 + 0 = 22。
// 11. 乘以2：Dec = 22 * 2 = 44。
// 12. 输入第六位：读到下一个字符 ‘1’，Dec = 44 + (1 - '0') = 44 + 1 = 45。

// #include <iostream>
// using namespace std;

// int main()
// {
//     int Dec = 0;
//     int power = 0; // 用于跟踪当前位的权值（2的幂）
//     char ch;
//     cout << "Binary = ";

//     // 读取二进制数
//     while (cin.get(ch) && (ch == '0' || ch == '1'))
//     {
//         // 从最低位开始，每读取一位，就将其乘以对应的权值（2的幂），然后累加到Dec上
//         // 注意：这里我们先更新权值（向左移动一位，即乘以2），然后再进行累加
//         Dec += (ch - '0') * (1 << power++);
//     }

//     // 输出转换后的十进制数
//     cout << "Decimal = " << Dec << endl;

//     return 0;
// }
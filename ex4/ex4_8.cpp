#include <iostream>
using namespace std;

int main()
{
    int a[2][3];
    int i, *p;

    // 初始化二维数组a的指针p指向a[0]的首地址，同时初始化循环变量i为1
    for (p = a[0], i = 1; p < a[0] + 6; p++, i++)
    {
        // 输出指针p的地址
        cout << p << '\t';

        // 如果i是3的倍数，则输出换行符
        if (i % 3 == 0)
        {
            cout << endl;
        }
    }

    // 遍历二维数组a的每一行
    for (i = 0; i < 2; i++)
    {
        // 输出二维数组a第i行的地址
        cout << a[i] << '\t';
    }
    cout << endl;
}

// 输出
// 0x16f5ef1f0     0x16f5ef1f4     0x16f5ef1f8
// 0x16f5ef1fc     0x16f5ef200     0x16f5ef204
// 0x16f5ef1f0     0x16f5ef1fc

/*

    总结
  对于二维数组
  (1) 不带下标的数组名是一个逻辑上的二级指针，所指对象是行向量，偏移量是一行元素的储存长度
  (2) 带一个下标的数组名是一级指针，偏移量是一个元素的长度，它所指的对象是数组元素

*/

// 二级数组和二维指针是有区别的